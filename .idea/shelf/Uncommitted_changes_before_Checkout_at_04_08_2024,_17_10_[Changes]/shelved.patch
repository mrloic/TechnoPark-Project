Index: models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from app import db\nfrom flask_login import UserMixin\nfrom datetime import datetime\n\n\nclass Employee(db.Model, UserMixin):\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    last_name = db.Column(db.String(50), unique=False, nullable=False)\n    first_name = db.Column(db.String(50), unique=False, nullable=False)\n    middle_name = db.Column(db.String(50), unique=False, nullable=True)\n    division = db.Column(db.String(150), unique=False, nullable=False)\n    role = db.Column(db.String(50), unique=False, nullable=False)\n    email = db.Column(db.String(50), unique=True, nullable=False)\n    phone = db.Column(db.Integer, unique=True, nullable=False)\n    work_amount = db.Column(db.Integer, unique=False, nullable=False)\n    salary = db.Column(db.Integer, unique=False, nullable=False)\n    status = db.Column(db.Boolean, default=False)\n    password = db.Column(db.String(512), nullable=False)\n\n    def __init__(self, last_name, first_name, middle_name, division, role, email, phone, work_amount, salary, status,\n                 password):\n        self.last_name = last_name\n        self.first_name = first_name\n        self.middle_name = middle_name\n        self.division = division\n        self.role = role\n        self.email = email\n        self.phone = phone\n        self.work_amount = work_amount\n        self.salary = salary\n        self.status = status\n        self.password = password\n\n\nclass Task(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    work_number = db.Column(db.Integer, nullable=False)\n    from_whom_id = db.Column(db.String, db.ForeignKey('employee.id'), nullable=True)\n    description = db.Column(db.Text, nullable=True)\n    send_time = db.Column(db.DateTime, default=datetime.utcnow)\n    time_limit = db.Column(db.DateTime, default=datetime.utcnow)\n    total_time = db.Column(db.DateTime, default=datetime.utcnow)\n    status = db.Column(db.String(50), unique=False, nullable=False, default='wait')\n    employee_id = db.Column(db.Integer, db.ForeignKey('employee.id'), nullable=True)\n    image = db.Column(db.String(100))\n\n    def __init__(self, work_number, from_whom_id, description, send_time, time_limit, total_time, status, employee_id, image):\n        self.work_number = work_number\n        self.from_whom_id = from_whom_id\n        self.description = description\n        self.send_time = send_time\n        self.time_limit = time_limit\n        self.total_time = total_time\n        self.status = status\n        self.employee_id = employee_id\n        self.image = image\n\n\nclass Object(db.Model):\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    object_name = db.Column(db.String(50), unique=False, nullable=False)\n    type = db.Column(db.String(50), unique=False, nullable=False)\n    buy_date = db.Column(db.DateTime, default=datetime.utcnow)\n    break_count = db.Column(db.Integer, nullable=False)\n    recovery_date = db.Column(db.DateTime, default=datetime.utcnow)\n    room_number = db.Column(db.String(50), nullable=False)\n\nclass RecoveryHistory(db.Model):\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    description = db.Column(db.Text, nullable=True)\n    employee_id = db.Column(db.Integer, db.ForeignKey('employee.id'), nullable=True)\n    recovery_date = db.Column()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models.py b/models.py
--- a/models.py	(revision f3fbe3518e9b5f603e5155a4afe65d20ceb5dbd1)
+++ b/models.py	(date 1722773440674)
@@ -65,6 +65,8 @@
     recovery_date = db.Column(db.DateTime, default=datetime.utcnow)
     room_number = db.Column(db.String(50), nullable=False)
 
+
+
 class RecoveryHistory(db.Model):
     id = db.Column(db.Integer, primary_key=True, autoincrement=True)
     description = db.Column(db.Text, nullable=True)
